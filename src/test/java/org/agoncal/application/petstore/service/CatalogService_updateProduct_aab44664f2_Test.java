// Test generated by RoostGPT for test petstore using AI Type Open AI and AI Model gpt-4

package org.agoncal.application.petstore.service;

import org.agoncal.application.petstore.model.Category;
import org.agoncal.application.petstore.model.Product;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import javax.persistence.EntityManager;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

public class CatalogService_updateProduct_aab44664f2_Test {

    @InjectMocks
    CatalogService catalogService;

    @Mock
    EntityManager em;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testUpdateProduct() {
        Product product = new Product();
        product.setId(1L);
        product.setName("Product1");
        product.setDescription("Description1");
        product.setCategory(new Category());

        when(em.merge(product)).thenReturn(product);

        Product result = catalogService.updateProduct(product);

        assertNotNull(result);
        assertEquals(product.getId(), result.getId());
        assertEquals(product.getName(), result.getName());
        assertEquals(product.getDescription(), result.getDescription());
        assertEquals(product.getCategory(), result.getCategory());

        verify(em, times(1)).merge(product);
    }

    @Test
    public void testUpdateProduct_NullProduct() {
        Product product = null;

        when(em.merge(product)).thenThrow(new IllegalArgumentException());

        try {
            catalogService.updateProduct(product);
        } catch (IllegalArgumentException e) {
            assertNotNull(e);
        }

        verify(em, times(1)).merge(product);
    }
}
